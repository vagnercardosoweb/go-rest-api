networks:
  go-rest-api-network:
    driver: bridge

volumes:
  go-rest-api-redis-vl:
  go-rest-api-postgres-vl:

services:
  api:
    tty: true
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    restart: always
    container_name: go-rest-api-api
    env_file: .env.development
    security_opt:
      - no-new-privileges:true
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - .:/go/src
    networks:
      - go-rest-api-network
    ports:
      - "${DOCKER_PORT:-3000}:3000"
    environment:
      - APP_ENV=${APP_ENV:-development}
      - RUN_IN_DOCKER=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  postgres:
    tty: true
    image: bitnami/postgresql:16
    container_name: go-rest-api-postgres
    env_file: .env.development
    volumes:
      - go-rest-api-postgres-vl:/bitnami/postgresql
    networks:
      - go-rest-api-network
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - POSTGRESQL_USERNAME=${DB_USERNAME:-root}
      - POSTGRESQL_PASSWORD=${DB_PASSWORD:-root}
      - POSTGRESQL_DATABASE=${DB_NAME:-development}
      - POSTGRESQL_REPLICATION_USE_PASSFILE=no
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USERNAME:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: 768M
        reservations:
          cpus: "0.25"
          memory: 256M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    tty: true
    image: bitnami/redis:latest
    container_name: go-rest-api-redis
    env_file: .env.development
    volumes:
      - go-rest-api-redis-vl:/bitnami/redis/data
    networks:
      - go-rest-api-network
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis}
      - ALLOW_EMPTY_PASSWORD=no
    healthcheck:
      test: ["CMD", "redis-cli", "ping", "|", "grep", "-q", "PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 256M
        reservations:
          cpus: "0.25"
          memory: 128M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
